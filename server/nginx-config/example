upstream backend {
    server               localhost:8080;
    keepalive            32;
}


map $http_upgrade $connection_upgrade {
    default                   upgrade;
    ''                        close;
}

server {
    listen                    80;
    server_name               domain.com;
    return                    301 https://$server_name$request_uri;
}

server {
    listen                    443 ssl http2;
    server_name               domain.com;

    #Basic Auth
    #access_log /var/log/nginx/nginx.access.log;
    #error_log /var/log/nginx/nginx.error.log;
    #auth_basic "Restricted Area";
    #auth_basic_user_file /etc/nginx/.htpasswd;

    send_timeout              100m;

    #Faster resolving, improves stapling time. Timeout and nameservers may need to be adjusted for your location Google's have been used here.
    resolver                  8.8.4.4 8.8.8.8 valid=300s;
    resolver_timeout          10s;

    ssl_certificate           /etc/letsencrypt/live/domain.com/fullchain.pem;
    ssl_certificate_key       /etc/letsencrypt/live/domain.com/privkey.pem;
    ssl_trusted_certificate   /etc/letsencrypt/live/domain.com/chain.pem;

    ssl_dhparam         /etc/nginx/dhparam.pem;

    ssl_protocols             TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers "HIGH:!aNULL:!MD5:!ADH:!DH:!RC4:!RSA";
    #ssl_ciphers EECDH+AESGCM:EDH+AESGCM;
    ssl_ecdh_curve secp384r1; # Requires nginx >= 1.1.0
    ssl_session_timeout  10m;
    ssl_session_cache shared:SSL:10m;
    ssl_session_tickets off; # Requires nginx >= 1.5.9
    ssl_stapling on; # Requires nginx >= 1.3.7
    ssl_stapling_verify on; # Requires nginx => 1.3.7
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload";
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";

    # global gzip on
    gzip off;

    client_max_body_size 1G;

    #Forward real ip and host
    proxy_set_header     Host $host;
    proxy_set_header     X-Real-IP $remote_addr;
    proxy_set_header     X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header     X-Forwarded-Proto $scheme;

    #Websockets
    #proxy_http_version   1.1;
    #proxy_set_header     Upgrade $http_upgrade;
    #proxy_set_header     Connection "upgrade";

    location / {
        proxy_pass       http://backend;
    }

    include                   /etc/nginx/snippets/letsencrypt;
}